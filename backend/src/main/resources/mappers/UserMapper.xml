<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.nextit.backend.mapper.UserMapper">

    <!-- 모든 유저 조회 -->
    <select id="getAllUsers" resultType="kr.or.nextit.backend.model.User">
        SELECT * FROM users
    </select>

    <!-- 환자 목록 조회 -->
    <select id="getPatientList" resultType="kr.or.nextit.backend.model.User">
        SELECT * FROM users WHERE admin = 0
    </select>

    <!-- 의사 목록 조회 -->
    <select id="getDoctorList" resultType="kr.or.nextit.backend.model.User">
        SELECT * FROM doctors d
                          INNER JOIN users u
                                     ON u.user_no = d.doctor_user_no
                          INNER JOIN medical_department md
                                     ON d.department = md.department_no
                                         AND u.admin = 1
    </select>

    <!-- 관리자 목록 조회 -->
    <select id="getAdminList" resultType="kr.or.nextit.backend.model.User">
        SELECT * FROM users WHERE admin = 2
    </select>

    <!-- 특정 유저 조회 -->
    <select id="getUserById" parameterType="int" resultType="kr.or.nextit.backend.model.User">
        SELECT * FROM users WHERE user_no = #{userNo}
    </select>

    <!-- 의사 이름 조회 -->
    <select id="getDoctorsName" resultType="kr.or.nextit.backend.model.User">
        SELECT user_name FROM users WHERE admin = 1
    </select>

    <!-- 유저 추가 -->
    <insert id="insertUser" parameterType="kr.or.nextit.backend.model.User">
        INSERT INTO users (user_id, user_pass, user_name, user_rrn, email, phone, user_add, user_add2)
        VALUES (#{userId}, #{userPass}, #{userName}, #{userRrn}, #{email}, #{phone}, #{userAdd}, #{userAdd2})
    </insert>

    <!-- 유저 수정 -->
    <update id="updateUser" parameterType="kr.or.nextit.backend.model.User">
        UPDATE users
        SET user_id = #{userId},
            user_pass = #{userPass},
            user_name = #{userName},
            user_rrn = #{userRrn},
            email = #{email},
            phone = #{phone},
            user_add = #{userAdd},
            user_add2 = #{userAdd2},
            admin = #{admin},
            update_at = CURRENT_TIMESTAMP
        WHERE user_no = #{userNo}
    </update>

    <!-- 유저 삭제 -->
    <update id="deleteUser" parameterType="int">
        UPDATE users SET delete_yn = 'y' WHERE user_no = #{userNo}
    </update>

    <!-- ID 중복 확인 쿼리 추가 -->
    <select id="checkIdExists" parameterType="String" resultType="boolean">
        SELECT COUNT(*) > 0 FROM users WHERE user_id = #{userId};
    </select>

</mapper>
