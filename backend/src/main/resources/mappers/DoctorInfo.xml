<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.nextit.backend.mapper.DoctorInfoMapper">

    <!-- 모든 유저 조회 -->
    <select id="getDoctors" resultType="kr.or.nextit.backend.model.DoctorInfoDTO">
        SELECT
            u.user_name,
            u.user_no,
            md.department_name,
            GROUP_CONCAT(mt.treatment_name) AS treatments
        FROM
            users u
                JOIN
            doctors d ON u.user_no = d.doctor_no
                JOIN
            medical_department md ON d.department = md.department_no
                JOIN
            medical_treatment mt ON FIND_IN_SET(mt.treatment_no, d.treatment) > 0
        WHERE
            u.admin = 1
        GROUP BY
            u.user_name, md.department_name;
    </select>

    <!-- 이름 검색으로 의사 조회 -->
    <select id="searchDoctors" parameterType="String" resultType="kr.or.nextit.backend.model.DoctorInfoDTO">
        SELECT
        u.user_name,
        u.user_no,
        md.department_name,
        GROUP_CONCAT(DISTINCT mt.treatment_name) AS treatments
        FROM
        users u
        JOIN doctors d ON u.user_no = d.doctor_no
        JOIN medical_department md ON d.department = md.department_no
        JOIN medical_treatment mt ON FIND_IN_SET(mt.treatment_no, d.treatment) > 0
        WHERE
        u.admin = 1 AND u.user_name LIKE CONCAT('%', #{value}, '%')  <!-- 검색어 조건 추가 -->
        GROUP BY
        u.user_name, md.department_name;
    </select>


    <!--  모든 진료과 검색   -->
    <select id="getDepartments" parameterType="String" resultType="kr.or.nextit.backend.model.DoctorInfoDTO">
        SELECT
            md.department_name,
            GROUP_CONCAT(DISTINCT mt.treatment_name) AS treatments,
            GROUP_CONCAT(DISTINCT u.user_name) AS user_names  -- user_name을 포함하여 그룹화
        FROM
            medical_department md
                JOIN doctors d ON d.department = md.department_no
                JOIN users u ON u.user_no = d.doctor_no
                JOIN medical_treatment mt ON FIND_IN_SET(mt.treatment_no, d.treatment) > 0
        GROUP BY
            md.department_name;
    </select>

    <!-- 진료과 검색 -->
    <select id="searchDepartment" parameterType="String" resultType="kr.or.nextit.backend.model.DoctorInfoDTO">
        SELECT
        md.department_name,
        GROUP_CONCAT(DISTINCT u.user_name) AS user_names,
        GROUP_CONCAT(DISTINCT mt.treatment_name) AS treatments
        FROM
        users u
        JOIN doctors d ON u.user_no = d.doctor_no
        JOIN medical_department md ON d.department = md.department_no
        JOIN medical_treatment mt ON FIND_IN_SET(mt.treatment_no, d.treatment) > 0
        WHERE
        md.department_name LIKE CONCAT('%', #{value}, '%')
        GROUP BY
        md.department_name;  <!-- 진료과명으로 그룹화 -->
    </select>

    <!-- 의사 경력 조회 -->
    <select id="getDoctorCareer" resultType="kr.or.nextit.backend.model.DoctorInfoDTO">
        SELECT * FROM doctors d
        INNER JOIN users u
        ON u.user_no = d.doctor_no
        INNER JOIN medical_department md
        ON d.department = md.department_no
        INNER JOIN doctors_career dc
        ON d.doctor_no = dc.doctor_no
        AND u.user_no = #{userNo}
    </select>

    <!-- 의사 학력 조회 -->
    <select id="getDoctorEducation" resultType="kr.or.nextit.backend.model.DoctorInfoDTO">
        SELECT * FROM doctors d
        INNER JOIN users u
        ON u.user_no = d.doctor_no
        INNER JOIN doctors_education de
        ON d.doctor_no = de.doctor_no
        AND u.user_no = #{userNo}
    </select>

</mapper>
